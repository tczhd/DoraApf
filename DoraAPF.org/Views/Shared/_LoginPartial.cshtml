@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            @if ( await UserManager.IsInRoleAsync(UserManager.Users.First(p => p.Email.ToLower() == User.Identity.Name.ToLower()), "ADMIN"))
            {
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle " data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                    Edit <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li><a asp-controller="Content" asp-action="Index">Edit Home Page</a></li>
                        <li><a asp-controller="Content" asp-action="About">Edit About Page</a></li>
                        <li><a asp-controller="Content" asp-action="Team">Edit Team Page</a></li>
                        <li><a asp-controller="Content" asp-action="Story">Edit Goal Page</a></li>
                        <li><a asp-controller="Content" asp-action="News">Edit News Page</a></li>
                        <li><a asp-controller="Content" asp-action="Activities">Edit Activities Page</a></li>
                    </ul>
                </li>
            }
            <li>
                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)</a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
            </li>
        </ul>
    </form>


}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
        <li><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
    </ul>
}

