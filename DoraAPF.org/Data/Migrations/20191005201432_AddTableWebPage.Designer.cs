// <auto-generated />
using System;
using DoraAPF.org.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DoraAPF.org.Data.Migrations
{
    [DbContext(typeof(DoraAPFContext))]
    [Migration("20191005201432_AddTableWebPage")]
    partial class AddTableWebPage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DoraAPF.org.Data.Entities.BillingInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasMaxLength(30);

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("FirstName");

                    b.HasIndex("LastName");

                    b.ToTable("BillingInfo");
                });

            modelBuilder.Entity("DoraAPF.org.Data.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("AuthCode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("BillingId");

                    b.Property<string>("CardF4L4")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("CardToken")
                        .HasMaxLength(200);

                    b.Property<int>("CurrencyId");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<int>("PaymentType");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("BillingId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PaymentDate");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("DoraAPF.org.Data.Entities.VisitorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrowserName")
                        .HasMaxLength(150);

                    b.Property<string>("LocationIP")
                        .HasMaxLength(100);

                    b.Property<DateTime>("VisitedOn");

                    b.HasKey("Id");

                    b.HasIndex("LocationIP", "VisitedOn");

                    b.ToTable("VisitorLog");
                });

            modelBuilder.Entity("DoraAPF.org.Data.Entities.WebPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HtmlContent")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("WebPageTypeId");

                    b.HasKey("Id");

                    b.ToTable("WebPage");
                });

            modelBuilder.Entity("DoraAPF.org.Data.Entities.Payment", b =>
                {
                    b.HasOne("DoraAPF.org.Data.Entities.BillingInfo", "BillingInfo")
                        .WithMany("Payment")
                        .HasForeignKey("BillingId")
                        .HasConstraintName("FK_Payment_BillingInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
